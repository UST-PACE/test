# https://grafana.com/docs/grafana-cloud/monitor-infrastructure/kubernetes-monitoring/configuration/helm-chart-config/otel-collector/

image:
  repository: "otel/opentelemetry-collector-contrib"

# annotations:
#   service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
#   service.beta.kubernetes.io/aws-load-balancer-internal: "true"

mode: deployment

ports:
    otlp-http:
      enabled: true
    jaeger-compact:
      enabled: false
    jaeger-thrift:
      enabled: false
    jaeger-grpc:
      enabled: false
    zipkin:
       enabled: false

config:

  extensions:
    basicauth/grafana_cloud:
      client_auth:
        username: ${env:GF_CLOUD_OTLP_USERNAME}
        password: ${env:GF_CLOUD_OTLP_PASSWORD}
    basicauth/server:
      htpasswd:
         inline: |
          ${env:BASIC_AUTH_USERNAME}:${env:BASIC_AUTH_PASSWORD}
  receivers:
     otlp:
       protocols:
         grpc:
           endpoint: 0.0.0.0:4317
           auth:
              authenticator: basicauth/server
         http:
           endpoint: 0.0.0.0:4318
  processors:
    memory_limiter:
      check_interval: 1s
      limit_percentage: 65
      spike_limit_percentage: 20
    cumulativetodelta:
    filter/histograms:
      error_mode: ignore
      metrics:
      processors:
        - resource/cluster
        metric:
        - 'type == METRIC_DATA_TYPE_HISTOGRAM'
    # changing the batch config may affect prometheus remote write with out of order samples.
    # batch:
    #   send_batch_max_size: 200
    #   send_batch_size: 200
    #   timeout: 5s

  connectors:
    spanmetrics: {}
    servicegraph: {}

  processors:
    resource/cluster:
      attributes:
        - action: insert
          key: cluster
          value: ${env:CLUSTER_NAME}

  exporters:

    otlphttp/grafana_cloud:
      endpoint: https://otlp-gateway-prod-ap-south-1.grafana.net/otlp
      auth:
        authenticator: basicauth/grafana_cloud

  service:
    extensions: [basicauth/server, health_check, basicauth/grafana_cloud]
    pipelines:
      logs:
        receivers: [otlp]
        exporters: [otlphttp/grafana_cloud]
      logs/k8s_events:
        receivers: [otlp]
        exporters: [otlphttp/grafana_cloud]
      metrics:
        receivers: [prometheus, otlp]
        processors: [resource/cluster]
        exporters: [otlphttp/grafana_cloud]
